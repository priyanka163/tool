/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.nexteducation.swagger.nextsws.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.nexteducation.swagger.nextsws.model.NoteAttachmentResponse;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;


/**
 * NoteResponse
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-08T11:28:33.033+05:30")
public class NoteResponse   {
  @SerializedName("backGround")
  private String backGround = null;

  @SerializedName("calendarEventUuid")
  private String calendarEventUuid = null;

  @SerializedName("createdBy")
  private Long createdBy = null;

  @SerializedName("createdOn")
  private DateTime createdOn = null;

  @SerializedName("iconX")
  private Double iconX = null;

  @SerializedName("iconY")
  private Double iconY = null;

  @SerializedName("left")
  private Double left = null;

  @SerializedName("modifiedBy")
  private Long modifiedBy = null;

  @SerializedName("modifiedOn")
  private DateTime modifiedOn = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("noteAttachmentlist")
  private List<NoteAttachmentResponse> noteAttachmentlist = new ArrayList<NoteAttachmentResponse>();

  @SerializedName("noteIndex")
  private Integer noteIndex = null;

  @SerializedName("noteUuid")
  private String noteUuid = null;

  @SerializedName("pageUuid")
  private String pageUuid = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    @SerializedName("ACTIVE")
    ACTIVE("ACTIVE"),
    
    @SerializedName("INACTIVE")
    INACTIVE("INACTIVE");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("tenantId")
  private Long tenantId = null;

  @SerializedName("text")
  private String text = null;

  @SerializedName("top")
  private Double top = null;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    @SerializedName("Text")
    TEXT("Text"),
    
    @SerializedName("Checklist")
    CHECKLIST("Checklist"),
    
    @SerializedName("Audio")
    AUDIO("Audio"),
    
    @SerializedName("Video")
    VIDEO("Video"),
    
    @SerializedName("Image")
    IMAGE("Image"),
    
    @SerializedName("Scribble")
    SCRIBBLE("Scribble"),
    
    @SerializedName("Web")
    WEB("Web"),
    
    @SerializedName("Subject")
    SUBJECT("Subject"),
    
    @SerializedName("Multimedia")
    MULTIMEDIA("Multimedia");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("userId")
  private Long userId = null;

  @SerializedName("windowExpanded")
  private Integer windowExpanded = null;

  @SerializedName("windowHeight")
  private Double windowHeight = null;

  @SerializedName("windowWidth")
  private Double windowWidth = null;

  public NoteResponse backGround(String backGround) {
    this.backGround = backGround;
    return this;
  }

   /**
   * Get backGround
   * @return backGround
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getBackGround() {
    return backGround;
  }

  public void setBackGround(String backGround) {
    this.backGround = backGround;
  }

  public NoteResponse calendarEventUuid(String calendarEventUuid) {
    this.calendarEventUuid = calendarEventUuid;
    return this;
  }

   /**
   * Get calendarEventUuid
   * @return calendarEventUuid
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getCalendarEventUuid() {
    return calendarEventUuid;
  }

  public void setCalendarEventUuid(String calendarEventUuid) {
    this.calendarEventUuid = calendarEventUuid;
  }

  public NoteResponse createdBy(Long createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(Long createdBy) {
    this.createdBy = createdBy;
  }

  public NoteResponse createdOn(DateTime createdOn) {
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(DateTime createdOn) {
    this.createdOn = createdOn;
  }

  public NoteResponse iconX(Double iconX) {
    this.iconX = iconX;
    return this;
  }

   /**
   * Get iconX
   * @return iconX
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getIconX() {
    return iconX;
  }

  public void setIconX(Double iconX) {
    this.iconX = iconX;
  }

  public NoteResponse iconY(Double iconY) {
    this.iconY = iconY;
    return this;
  }

   /**
   * Get iconY
   * @return iconY
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getIconY() {
    return iconY;
  }

  public void setIconY(Double iconY) {
    this.iconY = iconY;
  }

  public NoteResponse left(Double left) {
    this.left = left;
    return this;
  }

   /**
   * Get left
   * @return left
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getLeft() {
    return left;
  }

  public void setLeft(Double left) {
    this.left = left;
  }

  public NoteResponse modifiedBy(Long modifiedBy) {
    this.modifiedBy = modifiedBy;
    return this;
  }

   /**
   * Get modifiedBy
   * @return modifiedBy
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getModifiedBy() {
    return modifiedBy;
  }

  public void setModifiedBy(Long modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  public NoteResponse modifiedOn(DateTime modifiedOn) {
    this.modifiedOn = modifiedOn;
    return this;
  }

   /**
   * Get modifiedOn
   * @return modifiedOn
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getModifiedOn() {
    return modifiedOn;
  }

  public void setModifiedOn(DateTime modifiedOn) {
    this.modifiedOn = modifiedOn;
  }

  public NoteResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public NoteResponse noteAttachmentlist(List<NoteAttachmentResponse> noteAttachmentlist) {
    this.noteAttachmentlist = noteAttachmentlist;
    return this;
  }

  public NoteResponse addNoteAttachmentlistItem(NoteAttachmentResponse noteAttachmentlistItem) {
    this.noteAttachmentlist.add(noteAttachmentlistItem);
    return this;
  }

   /**
   * Get noteAttachmentlist
   * @return noteAttachmentlist
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<NoteAttachmentResponse> getNoteAttachmentlist() {
    return noteAttachmentlist;
  }

  public void setNoteAttachmentlist(List<NoteAttachmentResponse> noteAttachmentlist) {
    this.noteAttachmentlist = noteAttachmentlist;
  }

  public NoteResponse noteIndex(Integer noteIndex) {
    this.noteIndex = noteIndex;
    return this;
  }

   /**
   * Get noteIndex
   * @return noteIndex
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getNoteIndex() {
    return noteIndex;
  }

  public void setNoteIndex(Integer noteIndex) {
    this.noteIndex = noteIndex;
  }

  public NoteResponse noteUuid(String noteUuid) {
    this.noteUuid = noteUuid;
    return this;
  }

   /**
   * Get noteUuid
   * @return noteUuid
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getNoteUuid() {
    return noteUuid;
  }

  public void setNoteUuid(String noteUuid) {
    this.noteUuid = noteUuid;
  }

  public NoteResponse pageUuid(String pageUuid) {
    this.pageUuid = pageUuid;
    return this;
  }

   /**
   * Get pageUuid
   * @return pageUuid
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getPageUuid() {
    return pageUuid;
  }

  public void setPageUuid(String pageUuid) {
    this.pageUuid = pageUuid;
  }

  public NoteResponse status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(example = "null", value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public NoteResponse tenantId(Long tenantId) {
    this.tenantId = tenantId;
    return this;
  }

   /**
   * Get tenantId
   * @return tenantId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getTenantId() {
    return tenantId;
  }

  public void setTenantId(Long tenantId) {
    this.tenantId = tenantId;
  }

  public NoteResponse text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public NoteResponse top(Double top) {
    this.top = top;
    return this;
  }

   /**
   * Get top
   * @return top
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getTop() {
    return top;
  }

  public void setTop(Double top) {
    this.top = top;
  }

  public NoteResponse type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(example = "null", value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public NoteResponse userId(Long userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getUserId() {
    return userId;
  }

  public void setUserId(Long userId) {
    this.userId = userId;
  }

  public NoteResponse windowExpanded(Integer windowExpanded) {
    this.windowExpanded = windowExpanded;
    return this;
  }

   /**
   * Get windowExpanded
   * @return windowExpanded
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getWindowExpanded() {
    return windowExpanded;
  }

  public void setWindowExpanded(Integer windowExpanded) {
    this.windowExpanded = windowExpanded;
  }

  public NoteResponse windowHeight(Double windowHeight) {
    this.windowHeight = windowHeight;
    return this;
  }

   /**
   * Get windowHeight
   * @return windowHeight
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getWindowHeight() {
    return windowHeight;
  }

  public void setWindowHeight(Double windowHeight) {
    this.windowHeight = windowHeight;
  }

  public NoteResponse windowWidth(Double windowWidth) {
    this.windowWidth = windowWidth;
    return this;
  }

   /**
   * Get windowWidth
   * @return windowWidth
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getWindowWidth() {
    return windowWidth;
  }

  public void setWindowWidth(Double windowWidth) {
    this.windowWidth = windowWidth;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NoteResponse noteResponse = (NoteResponse) o;
    return Objects.equals(this.backGround, noteResponse.backGround) &&
        Objects.equals(this.calendarEventUuid, noteResponse.calendarEventUuid) &&
        Objects.equals(this.createdBy, noteResponse.createdBy) &&
        Objects.equals(this.createdOn, noteResponse.createdOn) &&
        Objects.equals(this.iconX, noteResponse.iconX) &&
        Objects.equals(this.iconY, noteResponse.iconY) &&
        Objects.equals(this.left, noteResponse.left) &&
        Objects.equals(this.modifiedBy, noteResponse.modifiedBy) &&
        Objects.equals(this.modifiedOn, noteResponse.modifiedOn) &&
        Objects.equals(this.name, noteResponse.name) &&
        Objects.equals(this.noteAttachmentlist, noteResponse.noteAttachmentlist) &&
        Objects.equals(this.noteIndex, noteResponse.noteIndex) &&
        Objects.equals(this.noteUuid, noteResponse.noteUuid) &&
        Objects.equals(this.pageUuid, noteResponse.pageUuid) &&
        Objects.equals(this.status, noteResponse.status) &&
        Objects.equals(this.tenantId, noteResponse.tenantId) &&
        Objects.equals(this.text, noteResponse.text) &&
        Objects.equals(this.top, noteResponse.top) &&
        Objects.equals(this.type, noteResponse.type) &&
        Objects.equals(this.userId, noteResponse.userId) &&
        Objects.equals(this.windowExpanded, noteResponse.windowExpanded) &&
        Objects.equals(this.windowHeight, noteResponse.windowHeight) &&
        Objects.equals(this.windowWidth, noteResponse.windowWidth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backGround, calendarEventUuid, createdBy, createdOn, iconX, iconY, left, modifiedBy, modifiedOn, name, noteAttachmentlist, noteIndex, noteUuid, pageUuid, status, tenantId, text, top, type, userId, windowExpanded, windowHeight, windowWidth);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NoteResponse {\n");
    
    sb.append("    backGround: ").append(toIndentedString(backGround)).append("\n");
    sb.append("    calendarEventUuid: ").append(toIndentedString(calendarEventUuid)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    iconX: ").append(toIndentedString(iconX)).append("\n");
    sb.append("    iconY: ").append(toIndentedString(iconY)).append("\n");
    sb.append("    left: ").append(toIndentedString(left)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    modifiedOn: ").append(toIndentedString(modifiedOn)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    noteAttachmentlist: ").append(toIndentedString(noteAttachmentlist)).append("\n");
    sb.append("    noteIndex: ").append(toIndentedString(noteIndex)).append("\n");
    sb.append("    noteUuid: ").append(toIndentedString(noteUuid)).append("\n");
    sb.append("    pageUuid: ").append(toIndentedString(pageUuid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    top: ").append(toIndentedString(top)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    windowExpanded: ").append(toIndentedString(windowExpanded)).append("\n");
    sb.append("    windowHeight: ").append(toIndentedString(windowHeight)).append("\n");
    sb.append("    windowWidth: ").append(toIndentedString(windowWidth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

