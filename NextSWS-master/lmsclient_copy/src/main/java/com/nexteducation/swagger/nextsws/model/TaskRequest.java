/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.nexteducation.swagger.nextsws.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;


/**
 * TaskRequest
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-08T11:28:33.033+05:30")
public class TaskRequest   {
  @SerializedName("branchId")
  private Integer branchId = null;

  /**
   * Gets or Sets dateComparisonType
   */
  public enum DateComparisonTypeEnum {
    @SerializedName("eq")
    EQ("eq"),
    
    @SerializedName("lt")
    LT("lt"),
    
    @SerializedName("gt")
    GT("gt"),
    
    @SerializedName("lte")
    LTE("lte"),
    
    @SerializedName("gte")
    GTE("gte");

    private String value;

    DateComparisonTypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("dateComparisonType")
  private DateComparisonTypeEnum dateComparisonType = null;

  @SerializedName("dueDate")
  private DateTime dueDate = null;

  @SerializedName("ifAscOrder")
  private Boolean ifAscOrder = null;

  @SerializedName("ifPageable")
  private Boolean ifPageable = null;

  @SerializedName("ifParentTask")
  private Boolean ifParentTask = null;

  @SerializedName("learningPlanType")
  private String learningPlanType = null;

  @SerializedName("limit")
  private Integer limit = null;

  @SerializedName("page")
  private Integer page = null;

  @SerializedName("parentIds")
  private List<String> parentIds = new ArrayList<String>();

  @SerializedName("refIds")
  private List<String> refIds = new ArrayList<String>();

  @SerializedName("refTypes")
  private List<String> refTypes = new ArrayList<String>();

  @SerializedName("sortByField")
  private String sortByField = null;

  @SerializedName("statuses")
  private List<String> statuses = new ArrayList<String>();

  @SerializedName("taskStatuses")
  private List<String> taskStatuses = new ArrayList<String>();

  @SerializedName("types")
  private List<String> types = new ArrayList<String>();

  @SerializedName("userIds")
  private List<String> userIds = new ArrayList<String>();

  public TaskRequest branchId(Integer branchId) {
    this.branchId = branchId;
    return this;
  }

   /**
   * Get branchId
   * @return branchId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getBranchId() {
    return branchId;
  }

  public void setBranchId(Integer branchId) {
    this.branchId = branchId;
  }

  public TaskRequest dateComparisonType(DateComparisonTypeEnum dateComparisonType) {
    this.dateComparisonType = dateComparisonType;
    return this;
  }

   /**
   * Get dateComparisonType
   * @return dateComparisonType
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateComparisonTypeEnum getDateComparisonType() {
    return dateComparisonType;
  }

  public void setDateComparisonType(DateComparisonTypeEnum dateComparisonType) {
    this.dateComparisonType = dateComparisonType;
  }

  public TaskRequest dueDate(DateTime dueDate) {
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Get dueDate
   * @return dueDate
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getDueDate() {
    return dueDate;
  }

  public void setDueDate(DateTime dueDate) {
    this.dueDate = dueDate;
  }

  public TaskRequest ifAscOrder(Boolean ifAscOrder) {
    this.ifAscOrder = ifAscOrder;
    return this;
  }

   /**
   * Get ifAscOrder
   * @return ifAscOrder
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIfAscOrder() {
    return ifAscOrder;
  }

  public void setIfAscOrder(Boolean ifAscOrder) {
    this.ifAscOrder = ifAscOrder;
  }

  public TaskRequest ifPageable(Boolean ifPageable) {
    this.ifPageable = ifPageable;
    return this;
  }

   /**
   * Get ifPageable
   * @return ifPageable
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIfPageable() {
    return ifPageable;
  }

  public void setIfPageable(Boolean ifPageable) {
    this.ifPageable = ifPageable;
  }

  public TaskRequest ifParentTask(Boolean ifParentTask) {
    this.ifParentTask = ifParentTask;
    return this;
  }

   /**
   * Get ifParentTask
   * @return ifParentTask
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIfParentTask() {
    return ifParentTask;
  }

  public void setIfParentTask(Boolean ifParentTask) {
    this.ifParentTask = ifParentTask;
  }

  public TaskRequest learningPlanType(String learningPlanType) {
    this.learningPlanType = learningPlanType;
    return this;
  }

   /**
   * Get learningPlanType
   * @return learningPlanType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getLearningPlanType() {
    return learningPlanType;
  }

  public void setLearningPlanType(String learningPlanType) {
    this.learningPlanType = learningPlanType;
  }

  public TaskRequest limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Get limit
   * @return limit
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public TaskRequest page(Integer page) {
    this.page = page;
    return this;
  }

   /**
   * Get page
   * @return page
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getPage() {
    return page;
  }

  public void setPage(Integer page) {
    this.page = page;
  }

  public TaskRequest parentIds(List<String> parentIds) {
    this.parentIds = parentIds;
    return this;
  }

  public TaskRequest addParentIdsItem(String parentIdsItem) {
    this.parentIds.add(parentIdsItem);
    return this;
  }

   /**
   * Get parentIds
   * @return parentIds
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getParentIds() {
    return parentIds;
  }

  public void setParentIds(List<String> parentIds) {
    this.parentIds = parentIds;
  }

  public TaskRequest refIds(List<String> refIds) {
    this.refIds = refIds;
    return this;
  }

  public TaskRequest addRefIdsItem(String refIdsItem) {
    this.refIds.add(refIdsItem);
    return this;
  }

   /**
   * Get refIds
   * @return refIds
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getRefIds() {
    return refIds;
  }

  public void setRefIds(List<String> refIds) {
    this.refIds = refIds;
  }

  public TaskRequest refTypes(List<String> refTypes) {
    this.refTypes = refTypes;
    return this;
  }

  public TaskRequest addRefTypesItem(String refTypesItem) {
    this.refTypes.add(refTypesItem);
    return this;
  }

   /**
   * Get refTypes
   * @return refTypes
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getRefTypes() {
    return refTypes;
  }

  public void setRefTypes(List<String> refTypes) {
    this.refTypes = refTypes;
  }

  public TaskRequest sortByField(String sortByField) {
    this.sortByField = sortByField;
    return this;
  }

   /**
   * Get sortByField
   * @return sortByField
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getSortByField() {
    return sortByField;
  }

  public void setSortByField(String sortByField) {
    this.sortByField = sortByField;
  }

  public TaskRequest statuses(List<String> statuses) {
    this.statuses = statuses;
    return this;
  }

  public TaskRequest addStatusesItem(String statusesItem) {
    this.statuses.add(statusesItem);
    return this;
  }

   /**
   * Get statuses
   * @return statuses
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getStatuses() {
    return statuses;
  }

  public void setStatuses(List<String> statuses) {
    this.statuses = statuses;
  }

  public TaskRequest taskStatuses(List<String> taskStatuses) {
    this.taskStatuses = taskStatuses;
    return this;
  }

  public TaskRequest addTaskStatusesItem(String taskStatusesItem) {
    this.taskStatuses.add(taskStatusesItem);
    return this;
  }

   /**
   * Get taskStatuses
   * @return taskStatuses
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getTaskStatuses() {
    return taskStatuses;
  }

  public void setTaskStatuses(List<String> taskStatuses) {
    this.taskStatuses = taskStatuses;
  }

  public TaskRequest types(List<String> types) {
    this.types = types;
    return this;
  }

  public TaskRequest addTypesItem(String typesItem) {
    this.types.add(typesItem);
    return this;
  }

   /**
   * Get types
   * @return types
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getTypes() {
    return types;
  }

  public void setTypes(List<String> types) {
    this.types = types;
  }

  public TaskRequest userIds(List<String> userIds) {
    this.userIds = userIds;
    return this;
  }

  public TaskRequest addUserIdsItem(String userIdsItem) {
    this.userIds.add(userIdsItem);
    return this;
  }

   /**
   * Get userIds
   * @return userIds
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getUserIds() {
    return userIds;
  }

  public void setUserIds(List<String> userIds) {
    this.userIds = userIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskRequest taskRequest = (TaskRequest) o;
    return Objects.equals(this.branchId, taskRequest.branchId) &&
        Objects.equals(this.dateComparisonType, taskRequest.dateComparisonType) &&
        Objects.equals(this.dueDate, taskRequest.dueDate) &&
        Objects.equals(this.ifAscOrder, taskRequest.ifAscOrder) &&
        Objects.equals(this.ifPageable, taskRequest.ifPageable) &&
        Objects.equals(this.ifParentTask, taskRequest.ifParentTask) &&
        Objects.equals(this.learningPlanType, taskRequest.learningPlanType) &&
        Objects.equals(this.limit, taskRequest.limit) &&
        Objects.equals(this.page, taskRequest.page) &&
        Objects.equals(this.parentIds, taskRequest.parentIds) &&
        Objects.equals(this.refIds, taskRequest.refIds) &&
        Objects.equals(this.refTypes, taskRequest.refTypes) &&
        Objects.equals(this.sortByField, taskRequest.sortByField) &&
        Objects.equals(this.statuses, taskRequest.statuses) &&
        Objects.equals(this.taskStatuses, taskRequest.taskStatuses) &&
        Objects.equals(this.types, taskRequest.types) &&
        Objects.equals(this.userIds, taskRequest.userIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(branchId, dateComparisonType, dueDate, ifAscOrder, ifPageable, ifParentTask, learningPlanType, limit, page, parentIds, refIds, refTypes, sortByField, statuses, taskStatuses, types, userIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskRequest {\n");
    
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    dateComparisonType: ").append(toIndentedString(dateComparisonType)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    ifAscOrder: ").append(toIndentedString(ifAscOrder)).append("\n");
    sb.append("    ifPageable: ").append(toIndentedString(ifPageable)).append("\n");
    sb.append("    ifParentTask: ").append(toIndentedString(ifParentTask)).append("\n");
    sb.append("    learningPlanType: ").append(toIndentedString(learningPlanType)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    parentIds: ").append(toIndentedString(parentIds)).append("\n");
    sb.append("    refIds: ").append(toIndentedString(refIds)).append("\n");
    sb.append("    refTypes: ").append(toIndentedString(refTypes)).append("\n");
    sb.append("    sortByField: ").append(toIndentedString(sortByField)).append("\n");
    sb.append("    statuses: ").append(toIndentedString(statuses)).append("\n");
    sb.append("    taskStatuses: ").append(toIndentedString(taskStatuses)).append("\n");
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("    userIds: ").append(toIndentedString(userIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

