/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.nexteducation.swagger.nextsws.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.nexteducation.swagger.nextsws.model.AssessmentQuestionShortResponse;
import com.nexteducation.swagger.nextsws.model.RuleCriteriaRequest;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * AssessmentCriteriaRequest
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-08T11:28:33.033+05:30")
public class AssessmentCriteriaRequest   {
  @SerializedName("assessmentType")
  private String assessmentType = null;

  @SerializedName("btBased")
  private Boolean btBased = null;

  @SerializedName("btMarksMap")
  private Map<String, Integer> btMarksMap = new HashMap<String, Integer>();

  @SerializedName("btQuestions")
  private List<Integer> btQuestions = new ArrayList<Integer>();

  @SerializedName("chapterId")
  private Long chapterId = null;

  @SerializedName("chapterIds")
  private List<Long> chapterIds = new ArrayList<Long>();

  @SerializedName("chapterWeightageMarksMap")
  private Map<String, Integer> chapterWeightageMarksMap = new HashMap<String, Integer>();

  @SerializedName("conceptUUID")
  private String conceptUUID = null;

  @SerializedName("difficultyLevel")
  private String difficultyLevel = null;

  @SerializedName("difficultyMarksMap")
  private Map<String, Integer> difficultyMarksMap = new HashMap<String, Integer>();

  @SerializedName("id")
  private Long id = null;

  @SerializedName("instructions")
  private String instructions = null;

  @SerializedName("loUUID")
  private String loUUID = null;

  @SerializedName("marks")
  private Integer marks = null;

  @SerializedName("marksRequired")
  private List<Double> marksRequired = new ArrayList<Double>();

  @SerializedName("name")
  private String name = null;

  @SerializedName("noOfQuestions")
  private List<Integer> noOfQuestions = new ArrayList<Integer>();

  @SerializedName("qtypeMarksMap")
  private Map<String, Integer> qtypeMarksMap = new HashMap<String, Integer>();

  @SerializedName("questions")
  private List<AssessmentQuestionShortResponse> questions = new ArrayList<AssessmentQuestionShortResponse>();

  @SerializedName("ruleCriteria")
  private List<RuleCriteriaRequest> ruleCriteria = new ArrayList<RuleCriteriaRequest>();

  @SerializedName("session")
  private String session = null;

  @SerializedName("syllabusId")
  private Long syllabusId = null;

  @SerializedName("taxonomyQuestions")
  private List<Integer> taxonomyQuestions = new ArrayList<Integer>();

  @SerializedName("taxonomyWeightages")
  private List<Double> taxonomyWeightages = new ArrayList<Double>();

  @SerializedName("time")
  private Integer time = null;

  @SerializedName("totalNoOfQuestions")
  private Integer totalNoOfQuestions = null;

  public AssessmentCriteriaRequest assessmentType(String assessmentType) {
    this.assessmentType = assessmentType;
    return this;
  }

   /**
   * Get assessmentType
   * @return assessmentType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getAssessmentType() {
    return assessmentType;
  }

  public void setAssessmentType(String assessmentType) {
    this.assessmentType = assessmentType;
  }

  public AssessmentCriteriaRequest btBased(Boolean btBased) {
    this.btBased = btBased;
    return this;
  }

   /**
   * Get btBased
   * @return btBased
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getBtBased() {
    return btBased;
  }

  public void setBtBased(Boolean btBased) {
    this.btBased = btBased;
  }

  public AssessmentCriteriaRequest btMarksMap(Map<String, Integer> btMarksMap) {
    this.btMarksMap = btMarksMap;
    return this;
  }

  public AssessmentCriteriaRequest putBtMarksMapItem(String key, Integer btMarksMapItem) {
    this.btMarksMap.put(key, btMarksMapItem);
    return this;
  }

   /**
   * Get btMarksMap
   * @return btMarksMap
  **/
  @ApiModelProperty(example = "null", value = "")
  public Map<String, Integer> getBtMarksMap() {
    return btMarksMap;
  }

  public void setBtMarksMap(Map<String, Integer> btMarksMap) {
    this.btMarksMap = btMarksMap;
  }

  public AssessmentCriteriaRequest btQuestions(List<Integer> btQuestions) {
    this.btQuestions = btQuestions;
    return this;
  }

  public AssessmentCriteriaRequest addBtQuestionsItem(Integer btQuestionsItem) {
    this.btQuestions.add(btQuestionsItem);
    return this;
  }

   /**
   * Get btQuestions
   * @return btQuestions
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Integer> getBtQuestions() {
    return btQuestions;
  }

  public void setBtQuestions(List<Integer> btQuestions) {
    this.btQuestions = btQuestions;
  }

  public AssessmentCriteriaRequest chapterId(Long chapterId) {
    this.chapterId = chapterId;
    return this;
  }

   /**
   * Get chapterId
   * @return chapterId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getChapterId() {
    return chapterId;
  }

  public void setChapterId(Long chapterId) {
    this.chapterId = chapterId;
  }

  public AssessmentCriteriaRequest chapterIds(List<Long> chapterIds) {
    this.chapterIds = chapterIds;
    return this;
  }

  public AssessmentCriteriaRequest addChapterIdsItem(Long chapterIdsItem) {
    this.chapterIds.add(chapterIdsItem);
    return this;
  }

   /**
   * Get chapterIds
   * @return chapterIds
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Long> getChapterIds() {
    return chapterIds;
  }

  public void setChapterIds(List<Long> chapterIds) {
    this.chapterIds = chapterIds;
  }

  public AssessmentCriteriaRequest chapterWeightageMarksMap(Map<String, Integer> chapterWeightageMarksMap) {
    this.chapterWeightageMarksMap = chapterWeightageMarksMap;
    return this;
  }

  public AssessmentCriteriaRequest putChapterWeightageMarksMapItem(String key, Integer chapterWeightageMarksMapItem) {
    this.chapterWeightageMarksMap.put(key, chapterWeightageMarksMapItem);
    return this;
  }

   /**
   * Get chapterWeightageMarksMap
   * @return chapterWeightageMarksMap
  **/
  @ApiModelProperty(example = "null", value = "")
  public Map<String, Integer> getChapterWeightageMarksMap() {
    return chapterWeightageMarksMap;
  }

  public void setChapterWeightageMarksMap(Map<String, Integer> chapterWeightageMarksMap) {
    this.chapterWeightageMarksMap = chapterWeightageMarksMap;
  }

  public AssessmentCriteriaRequest conceptUUID(String conceptUUID) {
    this.conceptUUID = conceptUUID;
    return this;
  }

   /**
   * Get conceptUUID
   * @return conceptUUID
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getConceptUUID() {
    return conceptUUID;
  }

  public void setConceptUUID(String conceptUUID) {
    this.conceptUUID = conceptUUID;
  }

  public AssessmentCriteriaRequest difficultyLevel(String difficultyLevel) {
    this.difficultyLevel = difficultyLevel;
    return this;
  }

   /**
   * Get difficultyLevel
   * @return difficultyLevel
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getDifficultyLevel() {
    return difficultyLevel;
  }

  public void setDifficultyLevel(String difficultyLevel) {
    this.difficultyLevel = difficultyLevel;
  }

  public AssessmentCriteriaRequest difficultyMarksMap(Map<String, Integer> difficultyMarksMap) {
    this.difficultyMarksMap = difficultyMarksMap;
    return this;
  }

  public AssessmentCriteriaRequest putDifficultyMarksMapItem(String key, Integer difficultyMarksMapItem) {
    this.difficultyMarksMap.put(key, difficultyMarksMapItem);
    return this;
  }

   /**
   * Get difficultyMarksMap
   * @return difficultyMarksMap
  **/
  @ApiModelProperty(example = "null", value = "")
  public Map<String, Integer> getDifficultyMarksMap() {
    return difficultyMarksMap;
  }

  public void setDifficultyMarksMap(Map<String, Integer> difficultyMarksMap) {
    this.difficultyMarksMap = difficultyMarksMap;
  }

  public AssessmentCriteriaRequest id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public AssessmentCriteriaRequest instructions(String instructions) {
    this.instructions = instructions;
    return this;
  }

   /**
   * Get instructions
   * @return instructions
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getInstructions() {
    return instructions;
  }

  public void setInstructions(String instructions) {
    this.instructions = instructions;
  }

  public AssessmentCriteriaRequest loUUID(String loUUID) {
    this.loUUID = loUUID;
    return this;
  }

   /**
   * Get loUUID
   * @return loUUID
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getLoUUID() {
    return loUUID;
  }

  public void setLoUUID(String loUUID) {
    this.loUUID = loUUID;
  }

  public AssessmentCriteriaRequest marks(Integer marks) {
    this.marks = marks;
    return this;
  }

   /**
   * Get marks
   * @return marks
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getMarks() {
    return marks;
  }

  public void setMarks(Integer marks) {
    this.marks = marks;
  }

  public AssessmentCriteriaRequest marksRequired(List<Double> marksRequired) {
    this.marksRequired = marksRequired;
    return this;
  }

  public AssessmentCriteriaRequest addMarksRequiredItem(Double marksRequiredItem) {
    this.marksRequired.add(marksRequiredItem);
    return this;
  }

   /**
   * Get marksRequired
   * @return marksRequired
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Double> getMarksRequired() {
    return marksRequired;
  }

  public void setMarksRequired(List<Double> marksRequired) {
    this.marksRequired = marksRequired;
  }

  public AssessmentCriteriaRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AssessmentCriteriaRequest noOfQuestions(List<Integer> noOfQuestions) {
    this.noOfQuestions = noOfQuestions;
    return this;
  }

  public AssessmentCriteriaRequest addNoOfQuestionsItem(Integer noOfQuestionsItem) {
    this.noOfQuestions.add(noOfQuestionsItem);
    return this;
  }

   /**
   * Get noOfQuestions
   * @return noOfQuestions
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Integer> getNoOfQuestions() {
    return noOfQuestions;
  }

  public void setNoOfQuestions(List<Integer> noOfQuestions) {
    this.noOfQuestions = noOfQuestions;
  }

  public AssessmentCriteriaRequest qtypeMarksMap(Map<String, Integer> qtypeMarksMap) {
    this.qtypeMarksMap = qtypeMarksMap;
    return this;
  }

  public AssessmentCriteriaRequest putQtypeMarksMapItem(String key, Integer qtypeMarksMapItem) {
    this.qtypeMarksMap.put(key, qtypeMarksMapItem);
    return this;
  }

   /**
   * Get qtypeMarksMap
   * @return qtypeMarksMap
  **/
  @ApiModelProperty(example = "null", value = "")
  public Map<String, Integer> getQtypeMarksMap() {
    return qtypeMarksMap;
  }

  public void setQtypeMarksMap(Map<String, Integer> qtypeMarksMap) {
    this.qtypeMarksMap = qtypeMarksMap;
  }

  public AssessmentCriteriaRequest questions(List<AssessmentQuestionShortResponse> questions) {
    this.questions = questions;
    return this;
  }

  public AssessmentCriteriaRequest addQuestionsItem(AssessmentQuestionShortResponse questionsItem) {
    this.questions.add(questionsItem);
    return this;
  }

   /**
   * Get questions
   * @return questions
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<AssessmentQuestionShortResponse> getQuestions() {
    return questions;
  }

  public void setQuestions(List<AssessmentQuestionShortResponse> questions) {
    this.questions = questions;
  }

  public AssessmentCriteriaRequest ruleCriteria(List<RuleCriteriaRequest> ruleCriteria) {
    this.ruleCriteria = ruleCriteria;
    return this;
  }

  public AssessmentCriteriaRequest addRuleCriteriaItem(RuleCriteriaRequest ruleCriteriaItem) {
    this.ruleCriteria.add(ruleCriteriaItem);
    return this;
  }

   /**
   * Get ruleCriteria
   * @return ruleCriteria
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<RuleCriteriaRequest> getRuleCriteria() {
    return ruleCriteria;
  }

  public void setRuleCriteria(List<RuleCriteriaRequest> ruleCriteria) {
    this.ruleCriteria = ruleCriteria;
  }

  public AssessmentCriteriaRequest session(String session) {
    this.session = session;
    return this;
  }

   /**
   * Get session
   * @return session
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getSession() {
    return session;
  }

  public void setSession(String session) {
    this.session = session;
  }

  public AssessmentCriteriaRequest syllabusId(Long syllabusId) {
    this.syllabusId = syllabusId;
    return this;
  }

   /**
   * Get syllabusId
   * @return syllabusId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getSyllabusId() {
    return syllabusId;
  }

  public void setSyllabusId(Long syllabusId) {
    this.syllabusId = syllabusId;
  }

  public AssessmentCriteriaRequest taxonomyQuestions(List<Integer> taxonomyQuestions) {
    this.taxonomyQuestions = taxonomyQuestions;
    return this;
  }

  public AssessmentCriteriaRequest addTaxonomyQuestionsItem(Integer taxonomyQuestionsItem) {
    this.taxonomyQuestions.add(taxonomyQuestionsItem);
    return this;
  }

   /**
   * Get taxonomyQuestions
   * @return taxonomyQuestions
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Integer> getTaxonomyQuestions() {
    return taxonomyQuestions;
  }

  public void setTaxonomyQuestions(List<Integer> taxonomyQuestions) {
    this.taxonomyQuestions = taxonomyQuestions;
  }

  public AssessmentCriteriaRequest taxonomyWeightages(List<Double> taxonomyWeightages) {
    this.taxonomyWeightages = taxonomyWeightages;
    return this;
  }

  public AssessmentCriteriaRequest addTaxonomyWeightagesItem(Double taxonomyWeightagesItem) {
    this.taxonomyWeightages.add(taxonomyWeightagesItem);
    return this;
  }

   /**
   * Get taxonomyWeightages
   * @return taxonomyWeightages
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Double> getTaxonomyWeightages() {
    return taxonomyWeightages;
  }

  public void setTaxonomyWeightages(List<Double> taxonomyWeightages) {
    this.taxonomyWeightages = taxonomyWeightages;
  }

  public AssessmentCriteriaRequest time(Integer time) {
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getTime() {
    return time;
  }

  public void setTime(Integer time) {
    this.time = time;
  }

  public AssessmentCriteriaRequest totalNoOfQuestions(Integer totalNoOfQuestions) {
    this.totalNoOfQuestions = totalNoOfQuestions;
    return this;
  }

   /**
   * Get totalNoOfQuestions
   * @return totalNoOfQuestions
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getTotalNoOfQuestions() {
    return totalNoOfQuestions;
  }

  public void setTotalNoOfQuestions(Integer totalNoOfQuestions) {
    this.totalNoOfQuestions = totalNoOfQuestions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssessmentCriteriaRequest assessmentCriteriaRequest = (AssessmentCriteriaRequest) o;
    return Objects.equals(this.assessmentType, assessmentCriteriaRequest.assessmentType) &&
        Objects.equals(this.btBased, assessmentCriteriaRequest.btBased) &&
        Objects.equals(this.btMarksMap, assessmentCriteriaRequest.btMarksMap) &&
        Objects.equals(this.btQuestions, assessmentCriteriaRequest.btQuestions) &&
        Objects.equals(this.chapterId, assessmentCriteriaRequest.chapterId) &&
        Objects.equals(this.chapterIds, assessmentCriteriaRequest.chapterIds) &&
        Objects.equals(this.chapterWeightageMarksMap, assessmentCriteriaRequest.chapterWeightageMarksMap) &&
        Objects.equals(this.conceptUUID, assessmentCriteriaRequest.conceptUUID) &&
        Objects.equals(this.difficultyLevel, assessmentCriteriaRequest.difficultyLevel) &&
        Objects.equals(this.difficultyMarksMap, assessmentCriteriaRequest.difficultyMarksMap) &&
        Objects.equals(this.id, assessmentCriteriaRequest.id) &&
        Objects.equals(this.instructions, assessmentCriteriaRequest.instructions) &&
        Objects.equals(this.loUUID, assessmentCriteriaRequest.loUUID) &&
        Objects.equals(this.marks, assessmentCriteriaRequest.marks) &&
        Objects.equals(this.marksRequired, assessmentCriteriaRequest.marksRequired) &&
        Objects.equals(this.name, assessmentCriteriaRequest.name) &&
        Objects.equals(this.noOfQuestions, assessmentCriteriaRequest.noOfQuestions) &&
        Objects.equals(this.qtypeMarksMap, assessmentCriteriaRequest.qtypeMarksMap) &&
        Objects.equals(this.questions, assessmentCriteriaRequest.questions) &&
        Objects.equals(this.ruleCriteria, assessmentCriteriaRequest.ruleCriteria) &&
        Objects.equals(this.session, assessmentCriteriaRequest.session) &&
        Objects.equals(this.syllabusId, assessmentCriteriaRequest.syllabusId) &&
        Objects.equals(this.taxonomyQuestions, assessmentCriteriaRequest.taxonomyQuestions) &&
        Objects.equals(this.taxonomyWeightages, assessmentCriteriaRequest.taxonomyWeightages) &&
        Objects.equals(this.time, assessmentCriteriaRequest.time) &&
        Objects.equals(this.totalNoOfQuestions, assessmentCriteriaRequest.totalNoOfQuestions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assessmentType, btBased, btMarksMap, btQuestions, chapterId, chapterIds, chapterWeightageMarksMap, conceptUUID, difficultyLevel, difficultyMarksMap, id, instructions, loUUID, marks, marksRequired, name, noOfQuestions, qtypeMarksMap, questions, ruleCriteria, session, syllabusId, taxonomyQuestions, taxonomyWeightages, time, totalNoOfQuestions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssessmentCriteriaRequest {\n");
    
    sb.append("    assessmentType: ").append(toIndentedString(assessmentType)).append("\n");
    sb.append("    btBased: ").append(toIndentedString(btBased)).append("\n");
    sb.append("    btMarksMap: ").append(toIndentedString(btMarksMap)).append("\n");
    sb.append("    btQuestions: ").append(toIndentedString(btQuestions)).append("\n");
    sb.append("    chapterId: ").append(toIndentedString(chapterId)).append("\n");
    sb.append("    chapterIds: ").append(toIndentedString(chapterIds)).append("\n");
    sb.append("    chapterWeightageMarksMap: ").append(toIndentedString(chapterWeightageMarksMap)).append("\n");
    sb.append("    conceptUUID: ").append(toIndentedString(conceptUUID)).append("\n");
    sb.append("    difficultyLevel: ").append(toIndentedString(difficultyLevel)).append("\n");
    sb.append("    difficultyMarksMap: ").append(toIndentedString(difficultyMarksMap)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    instructions: ").append(toIndentedString(instructions)).append("\n");
    sb.append("    loUUID: ").append(toIndentedString(loUUID)).append("\n");
    sb.append("    marks: ").append(toIndentedString(marks)).append("\n");
    sb.append("    marksRequired: ").append(toIndentedString(marksRequired)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    noOfQuestions: ").append(toIndentedString(noOfQuestions)).append("\n");
    sb.append("    qtypeMarksMap: ").append(toIndentedString(qtypeMarksMap)).append("\n");
    sb.append("    questions: ").append(toIndentedString(questions)).append("\n");
    sb.append("    ruleCriteria: ").append(toIndentedString(ruleCriteria)).append("\n");
    sb.append("    session: ").append(toIndentedString(session)).append("\n");
    sb.append("    syllabusId: ").append(toIndentedString(syllabusId)).append("\n");
    sb.append("    taxonomyQuestions: ").append(toIndentedString(taxonomyQuestions)).append("\n");
    sb.append("    taxonomyWeightages: ").append(toIndentedString(taxonomyWeightages)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    totalNoOfQuestions: ").append(toIndentedString(totalNoOfQuestions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

