/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.nexteducation.swagger.nextsws.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.nexteducation.swagger.nextsws.model.AssessmentAnswerOptionResponse;
import com.nexteducation.swagger.nextsws.model.ObjectiveResponse;
import com.nexteducation.swagger.nextsws.model.QuestionAssetResponse;
import com.nexteducation.swagger.nextsws.model.ResponseDeclarationResponse;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * AssessmentQuestionResponse
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-15T17:16:40.307+05:30")
public class AssessmentQuestionResponse   {
  @SerializedName("answerOptions")
  private List<AssessmentAnswerOptionResponse> answerOptions = new ArrayList<AssessmentAnswerOptionResponse>();

  @SerializedName("assets")
  private List<QuestionAssetResponse> assets = new ArrayList<QuestionAssetResponse>();

  @SerializedName("difficultyLevel")
  private String difficultyLevel = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("iterationResponse")
  private Long iterationResponse = null;

  @SerializedName("marks")
  private Double marks = null;

  @SerializedName("objective")
  private ObjectiveResponse objective = null;

  @SerializedName("questionText")
  private String questionText = null;

  @SerializedName("responseDeclarations")
  private List<ResponseDeclarationResponse> responseDeclarations = new ArrayList<ResponseDeclarationResponse>();

  @SerializedName("solution")
  private String solution = null;

  @SerializedName("timeRequired")
  private Integer timeRequired = null;

  @SerializedName("uuid")
  private String uuid = null;

  public AssessmentQuestionResponse answerOptions(List<AssessmentAnswerOptionResponse> answerOptions) {
    this.answerOptions = answerOptions;
    return this;
  }

  public AssessmentQuestionResponse addAnswerOptionsItem(AssessmentAnswerOptionResponse answerOptionsItem) {
    this.answerOptions.add(answerOptionsItem);
    return this;
  }

   /**
   * Get answerOptions
   * @return answerOptions
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<AssessmentAnswerOptionResponse> getAnswerOptions() {
    return answerOptions;
  }

  public void setAnswerOptions(List<AssessmentAnswerOptionResponse> answerOptions) {
    this.answerOptions = answerOptions;
  }

  public AssessmentQuestionResponse assets(List<QuestionAssetResponse> assets) {
    this.assets = assets;
    return this;
  }

  public AssessmentQuestionResponse addAssetsItem(QuestionAssetResponse assetsItem) {
    this.assets.add(assetsItem);
    return this;
  }

   /**
   * Get assets
   * @return assets
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<QuestionAssetResponse> getAssets() {
    return assets;
  }

  public void setAssets(List<QuestionAssetResponse> assets) {
    this.assets = assets;
  }

  public AssessmentQuestionResponse difficultyLevel(String difficultyLevel) {
    this.difficultyLevel = difficultyLevel;
    return this;
  }

   /**
   * Get difficultyLevel
   * @return difficultyLevel
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getDifficultyLevel() {
    return difficultyLevel;
  }

  public void setDifficultyLevel(String difficultyLevel) {
    this.difficultyLevel = difficultyLevel;
  }

  public AssessmentQuestionResponse id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public AssessmentQuestionResponse iterationResponse(Long iterationResponse) {
    this.iterationResponse = iterationResponse;
    return this;
  }

   /**
   * Get iterationResponse
   * @return iterationResponse
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getIterationResponse() {
    return iterationResponse;
  }

  public void setIterationResponse(Long iterationResponse) {
    this.iterationResponse = iterationResponse;
  }

  public AssessmentQuestionResponse marks(Double marks) {
    this.marks = marks;
    return this;
  }

   /**
   * Get marks
   * @return marks
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getMarks() {
    return marks;
  }

  public void setMarks(Double marks) {
    this.marks = marks;
  }

  public AssessmentQuestionResponse objective(ObjectiveResponse objective) {
    this.objective = objective;
    return this;
  }

   /**
   * Get objective
   * @return objective
  **/
  @ApiModelProperty(example = "null", value = "")
  public ObjectiveResponse getObjective() {
    return objective;
  }

  public void setObjective(ObjectiveResponse objective) {
    this.objective = objective;
  }

  public AssessmentQuestionResponse questionText(String questionText) {
    this.questionText = questionText;
    return this;
  }

   /**
   * Get questionText
   * @return questionText
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getQuestionText() {
    return questionText;
  }

  public void setQuestionText(String questionText) {
    this.questionText = questionText;
  }

  public AssessmentQuestionResponse responseDeclarations(List<ResponseDeclarationResponse> responseDeclarations) {
    this.responseDeclarations = responseDeclarations;
    return this;
  }

  public AssessmentQuestionResponse addResponseDeclarationsItem(ResponseDeclarationResponse responseDeclarationsItem) {
    this.responseDeclarations.add(responseDeclarationsItem);
    return this;
  }

   /**
   * Get responseDeclarations
   * @return responseDeclarations
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<ResponseDeclarationResponse> getResponseDeclarations() {
    return responseDeclarations;
  }

  public void setResponseDeclarations(List<ResponseDeclarationResponse> responseDeclarations) {
    this.responseDeclarations = responseDeclarations;
  }

  public AssessmentQuestionResponse solution(String solution) {
    this.solution = solution;
    return this;
  }

   /**
   * Get solution
   * @return solution
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getSolution() {
    return solution;
  }

  public void setSolution(String solution) {
    this.solution = solution;
  }

  public AssessmentQuestionResponse timeRequired(Integer timeRequired) {
    this.timeRequired = timeRequired;
    return this;
  }

   /**
   * Get timeRequired
   * @return timeRequired
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getTimeRequired() {
    return timeRequired;
  }

  public void setTimeRequired(Integer timeRequired) {
    this.timeRequired = timeRequired;
  }

  public AssessmentQuestionResponse uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssessmentQuestionResponse assessmentQuestionResponse = (AssessmentQuestionResponse) o;
    return Objects.equals(this.answerOptions, assessmentQuestionResponse.answerOptions) &&
        Objects.equals(this.assets, assessmentQuestionResponse.assets) &&
        Objects.equals(this.difficultyLevel, assessmentQuestionResponse.difficultyLevel) &&
        Objects.equals(this.id, assessmentQuestionResponse.id) &&
        Objects.equals(this.iterationResponse, assessmentQuestionResponse.iterationResponse) &&
        Objects.equals(this.marks, assessmentQuestionResponse.marks) &&
        Objects.equals(this.objective, assessmentQuestionResponse.objective) &&
        Objects.equals(this.questionText, assessmentQuestionResponse.questionText) &&
        Objects.equals(this.responseDeclarations, assessmentQuestionResponse.responseDeclarations) &&
        Objects.equals(this.solution, assessmentQuestionResponse.solution) &&
        Objects.equals(this.timeRequired, assessmentQuestionResponse.timeRequired) &&
        Objects.equals(this.uuid, assessmentQuestionResponse.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(answerOptions, assets, difficultyLevel, id, iterationResponse, marks, objective, questionText, responseDeclarations, solution, timeRequired, uuid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssessmentQuestionResponse {\n");
    
    sb.append("    answerOptions: ").append(toIndentedString(answerOptions)).append("\n");
    sb.append("    assets: ").append(toIndentedString(assets)).append("\n");
    sb.append("    difficultyLevel: ").append(toIndentedString(difficultyLevel)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    iterationResponse: ").append(toIndentedString(iterationResponse)).append("\n");
    sb.append("    marks: ").append(toIndentedString(marks)).append("\n");
    sb.append("    objective: ").append(toIndentedString(objective)).append("\n");
    sb.append("    questionText: ").append(toIndentedString(questionText)).append("\n");
    sb.append("    responseDeclarations: ").append(toIndentedString(responseDeclarations)).append("\n");
    sb.append("    solution: ").append(toIndentedString(solution)).append("\n");
    sb.append("    timeRequired: ").append(toIndentedString(timeRequired)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

