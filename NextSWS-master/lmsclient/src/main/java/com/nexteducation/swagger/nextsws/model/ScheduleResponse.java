/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.nexteducation.swagger.nextsws.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;


/**
 * ScheduleResponse
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-15T17:16:40.307+05:30")
public class ScheduleResponse   {
  @SerializedName("currentDate")
  private DateTime currentDate = null;

  @SerializedName("errorMessage")
  private String errorMessage = null;

  @SerializedName("nextDate")
  private DateTime nextDate = null;

  @SerializedName("previousDate")
  private DateTime previousDate = null;

  public ScheduleResponse currentDate(DateTime currentDate) {
    this.currentDate = currentDate;
    return this;
  }

   /**
   * Get currentDate
   * @return currentDate
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getCurrentDate() {
    return currentDate;
  }

  public void setCurrentDate(DateTime currentDate) {
    this.currentDate = currentDate;
  }

  public ScheduleResponse errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * Get errorMessage
   * @return errorMessage
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }

  public ScheduleResponse nextDate(DateTime nextDate) {
    this.nextDate = nextDate;
    return this;
  }

   /**
   * Get nextDate
   * @return nextDate
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getNextDate() {
    return nextDate;
  }

  public void setNextDate(DateTime nextDate) {
    this.nextDate = nextDate;
  }

  public ScheduleResponse previousDate(DateTime previousDate) {
    this.previousDate = previousDate;
    return this;
  }

   /**
   * Get previousDate
   * @return previousDate
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getPreviousDate() {
    return previousDate;
  }

  public void setPreviousDate(DateTime previousDate) {
    this.previousDate = previousDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScheduleResponse scheduleResponse = (ScheduleResponse) o;
    return Objects.equals(this.currentDate, scheduleResponse.currentDate) &&
        Objects.equals(this.errorMessage, scheduleResponse.errorMessage) &&
        Objects.equals(this.nextDate, scheduleResponse.nextDate) &&
        Objects.equals(this.previousDate, scheduleResponse.previousDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentDate, errorMessage, nextDate, previousDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScheduleResponse {\n");
    
    sb.append("    currentDate: ").append(toIndentedString(currentDate)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    nextDate: ").append(toIndentedString(nextDate)).append("\n");
    sb.append("    previousDate: ").append(toIndentedString(previousDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

