/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.nexteducation.swagger.nextsws.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;


/**
 * SessionRequest
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-15T17:16:40.307+05:30")
public class SessionRequest   {
  @SerializedName("branchId")
  private Long branchId = null;

  /**
   * Gets or Sets mediaMode
   */
  public enum MediaModeEnum {
    @SerializedName("Relayed")
    RELAYED("Relayed"),
    
    @SerializedName("Routed")
    ROUTED("Routed");

    private String value;

    MediaModeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("mediaMode")
  private MediaModeEnum mediaMode = null;

  @SerializedName("sessionAdmin")
  private Long sessionAdmin = null;

  @SerializedName("sessionDate")
  private DateTime sessionDate = null;

  @SerializedName("sessionDescription")
  private String sessionDescription = null;

  @SerializedName("sessionId")
  private String sessionId = null;

  @SerializedName("sessionName")
  private String sessionName = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    @SerializedName("Active")
    ACTIVE("Active"),
    
    @SerializedName("Inactive")
    INACTIVE("Inactive"),
    
    @SerializedName("InProgress")
    INPROGRESS("InProgress");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("userId")
  private Long userId = null;

  public SessionRequest branchId(Long branchId) {
    this.branchId = branchId;
    return this;
  }

   /**
   * Get branchId
   * @return branchId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getBranchId() {
    return branchId;
  }

  public void setBranchId(Long branchId) {
    this.branchId = branchId;
  }

  public SessionRequest mediaMode(MediaModeEnum mediaMode) {
    this.mediaMode = mediaMode;
    return this;
  }

   /**
   * Get mediaMode
   * @return mediaMode
  **/
  @ApiModelProperty(example = "null", value = "")
  public MediaModeEnum getMediaMode() {
    return mediaMode;
  }

  public void setMediaMode(MediaModeEnum mediaMode) {
    this.mediaMode = mediaMode;
  }

  public SessionRequest sessionAdmin(Long sessionAdmin) {
    this.sessionAdmin = sessionAdmin;
    return this;
  }

   /**
   * Get sessionAdmin
   * @return sessionAdmin
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getSessionAdmin() {
    return sessionAdmin;
  }

  public void setSessionAdmin(Long sessionAdmin) {
    this.sessionAdmin = sessionAdmin;
  }

  public SessionRequest sessionDate(DateTime sessionDate) {
    this.sessionDate = sessionDate;
    return this;
  }

   /**
   * Get sessionDate
   * @return sessionDate
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getSessionDate() {
    return sessionDate;
  }

  public void setSessionDate(DateTime sessionDate) {
    this.sessionDate = sessionDate;
  }

  public SessionRequest sessionDescription(String sessionDescription) {
    this.sessionDescription = sessionDescription;
    return this;
  }

   /**
   * Get sessionDescription
   * @return sessionDescription
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getSessionDescription() {
    return sessionDescription;
  }

  public void setSessionDescription(String sessionDescription) {
    this.sessionDescription = sessionDescription;
  }

  public SessionRequest sessionId(String sessionId) {
    this.sessionId = sessionId;
    return this;
  }

   /**
   * Get sessionId
   * @return sessionId
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getSessionId() {
    return sessionId;
  }

  public void setSessionId(String sessionId) {
    this.sessionId = sessionId;
  }

  public SessionRequest sessionName(String sessionName) {
    this.sessionName = sessionName;
    return this;
  }

   /**
   * Get sessionName
   * @return sessionName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getSessionName() {
    return sessionName;
  }

  public void setSessionName(String sessionName) {
    this.sessionName = sessionName;
  }

  public SessionRequest status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(example = "null", value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public SessionRequest userId(Long userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getUserId() {
    return userId;
  }

  public void setUserId(Long userId) {
    this.userId = userId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SessionRequest sessionRequest = (SessionRequest) o;
    return Objects.equals(this.branchId, sessionRequest.branchId) &&
        Objects.equals(this.mediaMode, sessionRequest.mediaMode) &&
        Objects.equals(this.sessionAdmin, sessionRequest.sessionAdmin) &&
        Objects.equals(this.sessionDate, sessionRequest.sessionDate) &&
        Objects.equals(this.sessionDescription, sessionRequest.sessionDescription) &&
        Objects.equals(this.sessionId, sessionRequest.sessionId) &&
        Objects.equals(this.sessionName, sessionRequest.sessionName) &&
        Objects.equals(this.status, sessionRequest.status) &&
        Objects.equals(this.userId, sessionRequest.userId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(branchId, mediaMode, sessionAdmin, sessionDate, sessionDescription, sessionId, sessionName, status, userId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SessionRequest {\n");
    
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    mediaMode: ").append(toIndentedString(mediaMode)).append("\n");
    sb.append("    sessionAdmin: ").append(toIndentedString(sessionAdmin)).append("\n");
    sb.append("    sessionDate: ").append(toIndentedString(sessionDate)).append("\n");
    sb.append("    sessionDescription: ").append(toIndentedString(sessionDescription)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    sessionName: ").append(toIndentedString(sessionName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

